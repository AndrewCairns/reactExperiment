"use strict";var _createClass=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var IndecisionApp=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return _inherits(t,React.Component),_createClass(t,[{key:"render",value:function(){return React.createElement("div",null,React.createElement(Header,{title:"Indecision App",subtitle:"Let the computer 'think'"}),React.createElement(Action,null),React.createElement(Options,{options:["one","two","three"]}),React.createElement(AddOption,null))}}]),t}(),Header=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return _inherits(t,React.Component),_createClass(t,[{key:"render",value:function(){return React.createElement("div",null,React.createElement("h1",null,this.props.title),React.createElement("h2",null,this.props.subtitle))}}]),t}(),Action=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return _inherits(t,React.Component),_createClass(t,[{key:"handlePick",value:function(){alert("Handled!")}},{key:"render",value:function(){return React.createElement("div",null,React.createElement("button",{onClick:this.handlePick},"What should I do?"))}}]),t}(),Options=function(e){function n(e){_classCallCheck(this,n);var t=_possibleConstructorReturn(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t.handleRemoveAll=t.handleRemoveAll.bind(t),t}return _inherits(n,React.Component),_createClass(n,[{key:"handleRemoveAll",value:function(){console.log(this.props.options)}},{key:"render",value:function(){return React.createElement("div",null,React.createElement("button",{onClick:this.handleRemoveAll},"Remove all"),this.props.options.map(function(e,t){return React.createElement(Option,{key:t,optionText:e})}))}}]),n}(),Option=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return _inherits(t,React.Component),_createClass(t,[{key:"render",value:function(){return React.createElement("div",null,"Option: ",this.props.optionText)}}]),t}(),AddOption=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return _inherits(t,React.Component),_createClass(t,[{key:"handleSubmit",value:function(e){e.preventDefault();var t=e.target.elements.newItem.value.trim();t&&alert(t)}},{key:"render",value:function(){return React.createElement("div",null,React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("input",{type:"text",name:"newItem"}),React.createElement("button",null,"Add item!")))}}]),t}(),appRoot=document.getElementById("app");ReactDOM.render(React.createElement(IndecisionApp,null),appRoot);
"use strict";
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJzZWNvbmRhcnkuanMiXSwibmFtZXMiOlsiSW5kZWNpc2lvbkFwcCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY3JlYXRlRWxlbWVudCIsInN1YnRpdGxlIiwiQWN0aW9uIiwiT3B0aW9ucyIsIm9wdGlvbnMiLCJBZGRPcHRpb24iLCJIZWFkZXIiLCJ0aXRsZSIsImFsZXJ0Iiwib25DbGljayIsInRoaXMiLCJoYW5kbGVQaWNrIiwicHJvcHMiLCJfY2xhc3NDYWxsQ2hlY2siLCJfdGhpczQiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsIk9iamVjdCIsImdldFByb3RvdHlwZU9mIiwiY2FsbCIsImhhbmRsZVJlbW92ZUFsbCIsImJpbmQiLCJjb25zb2xlIiwibG9nIiwibWFwIiwib3B0aW9uIiwiaW5kZXgiLCJPcHRpb24iLCJvcHRpb25UZXh0IiwiZSIsInByZXZlbnREZWZhdWx0IiwibmV3SXRlbSIsInRhcmdldCIsImVsZW1lbnRzIiwidmFsdWUiLCJ0cmltIiwib25TdWJtaXQiLCJoYW5kbGVTdWJtaXQiLCJ0eXBlIiwibmFtZSIsImFwcFJvb3QiLCJnZXRFbGVtZW50QnlJZCIsIlJlYWN0RE9NIiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiZzRCQUFNQSx3TEFBc0JDLE1BQU1DLDBEQVFoQyxPQUNDRCxNQUFBRSxjQUFBLE1BQUEsS0FUR0gsTUFBQUEsY0FBQUEsT0FBQUEsQ0FBQUEsTUFHVSxpQkFPVUksU0FOUCw2QkFPZkgsTUFBQUUsY0FBQ0UsT0FBRCxNQUNBSixNQUFBRSxjQUFDRyxRQUFELENBQVNDLFFBUEssQ0FBQyxNQUFPLE1BQU8sV0FRN0JOLE1BQUFFLGNBQUNLLFVBQUQsZ0JBTUVDLGlMQUFlUixNQUFNQywwREFFekIsT0FDQ0QsTUFBQUUsY0FBQSxNQUFBLEtBbkJERixNQUFBRSxjQUFBLEtBQUEsS0FBTU8sS0FBQUEsTUFBUUEsT0FDZFQsTUFBQUUsY0FBQSxLQUFBLEtBQU1DLEtBQUFBLE1BQVdBLG9CQVFmQyxpTEFBQUosTUFBQ0MsOERBSEZTLE1BREQsNkNBOEJBLE9BdEMwQlYsTUFBQUEsY0FBQUEsTUFBQUEsS0F3Q3ZCQSxNQUFBRSxjQUFBLFNBQUEsQ0FBUVMsUUFBU0MsS0FBS0MsWUFBdEIsK0JBUUNSLG9CQUNMLFNBQUFBLEVBQVlTLEdBQU9DLGdCQUFBSCxLQUFBUCxHQUFBLElBQUFXLEVBQUFDLDJCQUFBTCxNQUFBUCxFQUFBYSxXQUFBQyxPQUFBQyxlQUFBZixJQUFBZ0IsS0FBQVQsS0FDWkUsSUFEWSxPQUVsQkUsRUFBS00sZ0JBQWtCTixFQUFLTSxnQkFBZ0JDLEtBQXJCUCxHQUZMQSxxQkFERWhCLE1BQU1DLG1FQTFCekJ1QixRQUFBQyxJQUFBYixLQUFBRSxNQUFBUiwwQ0FDTSxPQUFMTixNQUFBRSxjQUFBLE1BQUEsS0FDQUYsTUFBQUUsY0FBQSxTQUFBLENBQUFTLFFBQUFDLEtBQUFVLGlCQUFBLGNBQUFWLEtBQUFFLE1BQUFSLFFBQUFvQixJQUFBLFNBQUFDLEVBQUFDLEdBQUssT0FBS2QsTUFBQUEsY0FBTGUsT0FBS2YsQ0FBTVgsSUFBQUEsRUFBQUEsV0FBQUEsZ0JBZ0RkMEIsaUxBQWU3QixNQUFNQywwREFFekIsT0FDRUQsTUFBQUUsY0FBQSxNQUFBLEtBQUEsV0FDVVUsS0FBS0UsTUFBTWdCLHFCQTFDdkJwQixvTEFBQVYsTUFBQUMsOERBQ0E4QixHQW9EQUEsRUFBRUMsaUJBRUYsSUFBTUMsRUFBVUYsRUFBRUcsT0FwRFZDLFNBQUFGLFFBQUFHLE1BQUFDLE9BRU5KLEdBQUF2QixNQUFBdUIsb0NBQ0MsT0FGSGpDLE1BQUFFLGNBQUEsTUFBQSxLQUtBRixNQUFBRSxjQUFBLE9BQUEsQ0FBQW9DLFNBQUExQixLQUFBMkIsY0EwREl2QyxNQUFBRSxjQUFBLFFBQUEsQ0FBT3NDLEtBQUssT0FBT0MsS0FBSyxZQUN4QnpDLE1BQUFFLGNBQUEsU0FBQSxLQUFBLHdCQW5ESndDLFFBQUtwQixTQUFMcUIsZUFBNEJyQixPQUM1QnNCLFNBQUFDLE9BQUE3QyxNQUFBRSxjQUFBSCxjQUFBLE1BQUEyQztBQ3BERiIsImZpbGUiOiJzY3JpcHRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgSW5kZWNpc2lvbkFwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cdHJlbmRlcigpIHtcblx0XHRcblx0XHRjb25zdCB0aXRsZSA9IFwiSW5kZWNpc2lvbiBBcHBcIjtcblx0XHRjb25zdCBzdWJ0aXRsZSA9IFwiTGV0IHRoZSBjb21wdXRlciAndGhpbmsnXCI7XG5cdFx0Y29uc3Qgb3B0aW9ucyA9IFtcIm9uZVwiLCBcInR3b1wiLCBcInRocmVlXCJdXG5cblxuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2PlxuXHRcdFx0XHQ8SGVhZGVyIHRpdGxlPXt0aXRsZX0gc3VidGl0bGU9e3N1YnRpdGxlfSAvPlxuXHRcdFx0XHQ8QWN0aW9uIC8+XG5cdFx0XHRcdDxPcHRpb25zIG9wdGlvbnM9e29wdGlvbnN9IC8+XG5cdFx0XHRcdDxBZGRPcHRpb24gLz5cblx0XHRcdDwvZGl2PlxuXHRcdCk7XG5cdH1cbn1cblxuY2xhc3MgSGVhZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2PlxuXHRcdFx0XHQ8aDE+e3RoaXMucHJvcHMudGl0bGV9PC9oMT5cblx0XHRcdFx0PGgyPnt0aGlzLnByb3BzLnN1YnRpdGxlfTwvaDI+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cblxuXG5jbGFzcyBBY3Rpb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXHRoYW5kbGVQaWNrKCkge1xuXHRcdGFsZXJ0KFwiSGFuZGxlZCFcIilcblx0fVxuXG5cdHJlbmRlcigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0XHQ8ZGl2PlxuXHRcdFx0XHRcdDxidXR0b24gb25DbGljaz17dGhpcy5oYW5kbGVQaWNrfT5XaGF0IHNob3VsZCBJIGRvPzwvYnV0dG9uPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cblxuXG5jbGFzcyBPcHRpb25zIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcblx0XHRzdXBlcihwcm9wcyk7XG5cdFx0dGhpcy5oYW5kbGVSZW1vdmVBbGwgPSB0aGlzLmhhbmRsZVJlbW92ZUFsbC5iaW5kKHRoaXMpO1xuXHR9XG5cblx0aGFuZGxlUmVtb3ZlQWxsKCl7XG5cdFx0Y29uc29sZS5sb2codGhpcy5wcm9wcy5vcHRpb25zKVxuXHR9O1xuXG5cdHJlbmRlcigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0XHQ8ZGl2PlxuXHRcdFx0XHRcdDxidXR0b24gb25DbGljaz17dGhpcy5oYW5kbGVSZW1vdmVBbGx9PlJlbW92ZSBhbGw8L2J1dHRvbj5cblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHR0aGlzLnByb3BzLm9wdGlvbnMubWFwKChvcHRpb24sIGluZGV4KSA9PiB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiA8T3B0aW9uIGtleT17aW5kZXh9IG9wdGlvblRleHQ9e29wdGlvbn0vPlxuXHRcdFx0XHRcdFx0fSlcblx0XHRcdFx0XHR9XG5cdFx0XHRcdDwvZGl2PlxuXHRcdCk7XG5cdH1cbn1cblxuY2xhc3MgT3B0aW9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHRcdDxkaXY+XG5cdFx0XHRcdFx0T3B0aW9uOiB7dGhpcy5wcm9wcy5vcHRpb25UZXh0fVxuXHRcdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cblxuXG5cbmNsYXNzIEFkZE9wdGlvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cdGhhbmRsZVN1Ym1pdChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcblx0XHRjb25zdCBuZXdJdGVtID0gZS50YXJnZXQuZWxlbWVudHMubmV3SXRlbS52YWx1ZS50cmltKCk7XG5cblx0XHRpZiAobmV3SXRlbSl7XG5cdFx0XHRhbGVydChuZXdJdGVtKTtcblx0XHR9XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFx0PGRpdj5cblx0XHRcdFx0XHQ8Zm9ybSBvblN1Ym1pdD17dGhpcy5oYW5kbGVTdWJtaXR9PlxuXHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHQ8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwibmV3SXRlbVwiLz5cblx0XHRcdFx0XHRcdDxidXR0b24+QWRkIGl0ZW0hPC9idXR0b24+XG5cdFx0XHRcdFx0PC9mb3JtPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cblxuXG5cblxuY29uc3QgYXBwUm9vdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKTtcdFx0Ly9hcHBlbmRpbmcgaXQgdG8gdGhlIERPTVxuXG5SZWFjdERPTS5yZW5kZXIoPEluZGVjaXNpb25BcHAgLz4sIGFwcFJvb3QpXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiIsIi8vRVhBTVBMRSBVU0lORyBKU1ggV0lUSE9VVCBDT01QT05FTlRTXG5cblxuLy8gY29uc3QgYXBwRGF0YSA9IHtcbi8vIFx0dGl0bGU6ICdUaGUgdGl0bGUnLFxuLy8gXHRzdWJ0aXRsZTogJ015IHN1YnRpdGxlJyxcbi8vIFx0b3B0aW9uczogW11cbi8vIH07XG5cbi8vIGNvbnN0IG9uRm9ybVN1Ym1pdCA9IChlKSA9PiB7XG4vLyBcdGUucHJldmVudERlZmF1bHQoKTtcbi8vIFx0Y29uc29sZS5sb2coXCJmb3JtIHN1Ym1pdHRlZFwiKVxuXG4vLyBcdGNvbnN0IG9wdGlvbiA9IGUudGFyZ2V0LmVsZW1lbnRzLm9wdGlvbi52YWx1ZTtcblxuLy8gXHRpZiAob3B0aW9uKXtcbi8vIFx0XHRhcHBEYXRhLm9wdGlvbnMucHVzaChvcHRpb24pO1xuLy8gXHRcdGUudGFyZ2V0LmVsZW1lbnRzLm9wdGlvbi52YWx1ZSA9ICcnO1xuLy8gXHRcdHJlbmRlcigpO1xuLy8gXHR9XG4vLyB9XG5cblxuLy8gY29uc3Qgb25SZW1vdmVBbGwgPSAoKSA9PiB7XG4vLyBcdGFwcERhdGEub3B0aW9ucyA9IFtdO1xuLy8gXHRyZW5kZXIoKTtcbi8vIH1cblxuLy8gY29uc3Qgb25NYWtlRGVjaXNpb24gPSAoKSA9PiB7XG4vLyBcdGNvbnN0IHJhbmRvbU51bSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFwcERhdGEub3B0aW9ucy5sZW5ndGgpO1xuLy8gXHRjb25zdCBvcHRpb24gPSBhcHBEYXRhLm9wdGlvbnNbcmFuZG9tTnVtXTtcbi8vIFx0YWxlcnQob3B0aW9uKTtcbi8vIH1cblxuLy8gY29uc3QgbnVtYmVycyA9IFs1NSwgMTAxLCAxMDAwXTtcblxuXG5cbi8vIGNvbnN0IGFwcFJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJyk7XHRcdC8vYXBwZW5kaW5nIGl0IHRvIHRoZSBET01cblxuLy8gY29uc3QgcmVuZGVyID0gKCkgPT4ge1xuLy8gXHQvL0pTWCAtIEphdmFzY3JpcHQgWE1MXG4vLyBcdGNvbnN0IHRlbXBsYXRlID0gKFxuLy8gXHRcdDxkaXY+XG5cdFx0XHRcbi8vIFx0XHRcdHthcHBEYXRhLnRpdGxlICYmIDxoMT57YXBwRGF0YS50aXRsZX08L2gxPn1cbi8vIFx0XHRcdHthcHBEYXRhLnN1YnRpdGxlICYmIDxoMj57YXBwRGF0YS5zdWJ0aXRsZX08L2gyPn1cbi8vIFx0XHRcdDxwPnthcHBEYXRhLm9wdGlvbnMubGVuZ3RoID4gMCA/IFwiSGVyZSBhcmUgb3B0aW9uc1wiIDogXCJObyBvcHRpb25zXCJ9PC9wPlxuXHRcdFx0XG4vLyBcdFx0XHQ8YnV0dG9uIGRpc2FibGVkPXthcHBEYXRhLm9wdGlvbnMubGVuZ3RoID09PSAwfSBvbkNsaWNrPXtvbk1ha2VEZWNpc2lvbn0+V2hhdCBzaG91bGQgSSBkbz88L2J1dHRvbj5cbi8vIFx0XHRcdDxidXR0b24gb25DbGljaz17b25SZW1vdmVBbGx9PlJlbW92ZSBhbGw8L2J1dHRvbj5cblxuLy8gXHRcdFx0PG9sPlxuLy8gXHRcdFx0XHR7IFxuLy8gXHRcdFx0XHRcdGFwcERhdGEub3B0aW9ucy5tYXAoKG9wdGlvbiwgaW5kZXgpXHQ9PiB7XG4vLyBcdFx0XHRcdFx0XHRyZXR1cm4gPGxpIGtleT17aW5kZXh9PntvcHRpb259PC9saT5cbi8vIFx0XHRcdFx0XHR9KVxuLy8gXHRcdFx0XHR9XG4vLyBcdFx0XHQ8L29sPlxuXG5cblxuLy8gXHRcdFx0PGZvcm0gb25TdWJtaXQ9e29uRm9ybVN1Ym1pdH0+XG4vLyBcdFx0XHRcdDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJvcHRpb25cIiAvPlxuLy8gXHRcdFx0XHQ8YnV0dG9uPkFkZCBidXR0b248L2J1dHRvbj5cbi8vIFx0XHRcdDwvZm9ybT5cbi8vIFx0XHQ8L2Rpdj5cbi8vIFx0KTtcdC8vdGVtcGxhdGUgdG8gYmUgYWRkZWQgdG8gRE9NXG5cbi8vIFx0UmVhY3RET00ucmVuZGVyKHRlbXBsYXRlLCBhcHBSb290KTtcblxuLy8gfTtcblxuXG5cblxuLy8gcmVuZGVyKCk7Il19
